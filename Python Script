import random
import tkinter as tk 


def generate_sudoku_puzzle():
	#Starts with a completed grid, theme randomly deletes numbers from the puzzle so that users can guess/solve
	#Replaces the numbers with a ‘0’ to represent an empty cell
	
	puzzle_grid = [
					[7, 3, 5, 6, 1, 4, 8, 9, 2],
					[8, 4, 2, 9, 7, 3, 5, 6, 1], 
					[9, 6, 1, 2, 8, 5, 3, 7, 4], 
					[2, 8, 6, 3, 4, 9, 1, 5, 7], 
					[4, 1, 3, 8, 5, 7, 9, 2, 6], 
					[5, 7, 9, 1, 2, 6, 4, 3, 8], 
					[1, 5, 7, 4, 9, 2, 6, 8, 3], 
					[6, 9, 4, 7, 3, 8, 2, 1, 5], 
					[3, 2, 8, 5, 6, 1, 7, 4, 9]]
	
	for row in range(9):
		for col in range(9):
			if random.randint(0, 1):
				puzzle_grid[row][col] = 0

	return puzzle_grid

puzzle = generate_sudoku_puzzle()
print(puzzle)

def display_grid(puzzle_grid, root):

	x = 15
	y = 70
	for lists in puzzle_grid:
		y += 20
		new_label = tk.Label(root, text = lists)
		new_label.place(x = x, y = y)

#Displays grid using Tkinter
#‘Grid’ argument: the sudoku grid that is generated
# add a loop so display can update https://tkdocs.com/tutorial/eventloop.html

def get_guess(puzzle_grid, root):
#Asks user for input in order to submit their guess

	tk.Label(root, text="Row").grid(row=0)
	tk.Label(root, text="Column").grid(row=1)
	tk.Label(root, text="Number").grid(row=2)

	row_entry = tk.Entry(root, bg="white")
	row_entry.grid(row=0, column=1)

	column_entry = tk.Entry(root, bg="white")
	column_entry.grid(row=1, column=1)

	number_entry = tk.Entry(root, bg="white")
	number_entry.grid(row=2, column=1)

	return row_entry, column_entry, number_entry

def get_entry_data(puzzle_grid, root, entries):
	row_entry, column_entry, number_entry = entries
	
	row = row_entry.get()
	col = column_entry.get()
	num = number_entry.get()


def main():
    puzzle_grid = generate_sudoku_puzzle()
    root = tk.Tk()
    display_grid(puzzle_grid,root)
    entries = get_guess(puzzle_grid,root)
    submit_button = tk.Button(root, text = 'Submit', command = get_entry_data(puzzle_grid, root, entries))

    root.mainloop()


if __name__ == "__main__":
    main()
